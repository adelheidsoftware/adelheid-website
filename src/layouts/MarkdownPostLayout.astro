---
import BaseLayout from './BaseLayout.astro';

import LinkChip from '../components/LinkChip.astro';
import BlogBackButton from '../components/BlogBackButton.astro';

import headerLinkSvg from '../assets/svg/icons/header-link.svg?raw';
import headerLinkClickedSvg from '../assets/svg/icons/header-link-clicked.svg?raw';

const { frontmatter } = Astro.props;

const dateOptions: object = {
	year: "numeric",
	month: "long",
	day: "numeric"
};

const formattedDate = frontmatter.pubDate != undefined ? new Intl.DateTimeFormat("en-US", dateOptions).format(frontmatter.pubDate) : undefined;

import company from '../data/company.json';
---
<BaseLayout title=`${frontmatter.title} | ${company.name} Blog` description={frontmatter.summary}>
	<div class="wrapper">
		<article class="blog">
			<div class="blog-header">
				<BlogBackButton href="/blog" label="Back to articles", svgString=`<svg xmlns="http://www.w3.org/2000/svg" height="16" viewBox="0 -960 960 960" width="16"><path d="m382-480 294 294q15 15 14.5 35T675-116q-15 15-35 15t-35-15L297-423q-12-12-18-27t-6-30q0-15 6-30t18-27l308-308q15-15 35.5-14.5T676-844q15 15 15 35t-15 35L382-480Z" fill="currentColor"/></svg>`/>
				<div class="blog-heading">
					<h1 class="blog-title">{frontmatter.title}</h1>
				</div>
				<div class="blog-info">
					<div class="blog-author-container">
						<div class="blog-author">
							<b>{frontmatter.author}</b>
						</div>
						{!frontmatter.authorTitle ? '' : 
						<div class="blog-author-title">
							<p>{frontmatter.authorTitle}</p>
						</div>
						}
					</div>
					<div class="blog-date">
						<time>{formattedDate}</time>
					</div>
				</div>
	
				<div class="blog-tags">
					<ul class="tags-list">
						<li>
							{frontmatter.tags.map((tag: string) => (
								<LinkChip href={`/tags/${tag}`} label={`#${tag}`}/>
							))}
						</li>
					</ul>
				</div>
				<noscript>
					<p><em>JavaScript is disabled. Header link copying functionality is not available.</em></p>
				</noscript>
			</div>

			<slot />
		</article>
	</div>
</BaseLayout>

<style lang="scss">

time { // TODO: Fix time so it's in EST
	display: block;
	font-size: 1rem;
	line-height: 1.5;
	color: var(--color-on-surface);
}

.blog-header {
	padding: 1.77rem 0;
}

.blog-heading {
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	padding-top: 1.33rem;
	h1 {
		line-height: 1.5;
	}

	.blog-title {
		margin: 0;
		padding: 0;
		font-size: 2.8rem;
		max-width: 20ch !important;
	}

}

.blog-info {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	margin-top: 1.33rem;

	.blog-author-container {
		display: flex;
		flex-direction: column;

		p {
			margin: 0;
			padding: 0;
		}

		.blog-author {
			font-size: 1.375rem;
			margin: 0;
			padding: 0;
		}

		.blog-author-title {
			color: var(--color-on-surface-variant);
			font-size: 1rem;
			font-weight: 700;
			margin: 0;
			padding: 0;
		}
	}

	.blog-date {
		padding-top: 1rem;
		font-weight: 600;
	}
}

.blog-tags {
	margin-top: 1.33rem;
}

.tags-list {
	display: flex;
	flex-wrap: wrap;
	align-items: flex-start;
	max-width: 80ch;
	list-style: none !important;
	margin: 0 !important;
	padding: 0 !important;
}
</style>

<style lang="scss" is:global>
.header-link-icon {
	text-decoration: none;
	display: inline-flex;
	vertical-align: middle;
	cursor: pointer;
	height: 100%;
	visibility: hidden;

	color: var(--color-primary);
	padding-left: 4px;

	&:hover {
		color: var(--color-tertiary);
	}
}

.header-link-clicked-icon {
	text-decoration: none;
	display: inline-flex;
	vertical-align: middle;
	height: 100%;

	color: #1a7f37;
	padding-left: 4px;
}

.blog h2:hover .header-link-icon,
.blog h3:hover .header-link-icon,
.blog h4:hover .header-link-icon,
.blog h5:hover .header-link-icon,
.blog h6:hover .header-link-icon {
	visibility: visible;
}
</style>

<script define:vars={{ headerLinkSvg, headerLinkClickedSvg }}>
	const blogArticle = document.querySelector(".blog");
	const anchorTemplate = document.createElement("a");
	const headerLinkTemplate = document.createElement("span");

	if(blogArticle) {
		const anchorHeadings = blogArticle.querySelectorAll("h2, h3, h4, h5, h6");

		anchorTemplate.href = "#";

		headerLinkTemplate.setAttribute("title", "Click to copy a link to this section.");
		headerLinkTemplate.classList.add("header-link-icon");

		[...anchorHeadings].forEach((heading) => {
			const anchor = anchorTemplate.cloneNode(true);
			anchor.href = `#${heading.id}`;

			const headerLinkWrapper = headerLinkTemplate.cloneNode(true);
			headerLinkWrapper.innerHTML = headerLinkSvg;

			heading.appendChild(headerLinkWrapper);
			
			headerLinkWrapper.addEventListener("click", () => {
				navigator.clipboard.writeText(anchor.href)
				.then(() => {
					headerLinkWrapper.classList.add("header-link-clicked-icon");
					headerLinkWrapper.classList.remove("header-link-icon");
					headerLinkWrapper.innerHTML = headerLinkClickedSvg;

					setTimeout(() => {
						headerLinkWrapper.classList.remove("header-link-clicked-icon");
						headerLinkWrapper.classList.add("header-link-icon");
						headerLinkWrapper.innerHTML = headerLinkSvg;
					}, 2000);
				})
				.catch((err) => {
					console.error("Failed to copy URL:", err)
				});
			});
		});
	}
</script>